{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","react_default","a","createElement","className","concat","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","Navbar","mode","href","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","aboutText","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","showAlert","document","getElementById","select","navigator","clipboard","writeText","split","join","length","defaultProps","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.8e1d55a4.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower= word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n         <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg}\r\n          {/* <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import React from 'react'\r\n// eslint-disable-next-line no-unused-vars\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n    <div className=\"container-fluid\">\r\n      <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"/\">{props.aboutText}</a>\r\n          </li>\r\n        </ul>\r\n        {/* <form className=\"d-flex\" role=\"search\">\r\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n          <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n        </form> */}\r\n        <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes={title:PropTypes.string.isRequired,\r\n    aboutText:PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'Set title here',\r\n    aboutText: 'About'\r\n};","import React, { useState } from 'react';\r\n\r\n\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick=()=>{\r\n        //console.log(\"Uppercase was clicked\" + text);\r\n        let newText  = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to uppercase!\", \"success\");\r\n    }\r\n    const handleLoClick=()=>{\r\n        //console.log(\"Lowercase was clicked\" + text);\r\n        let newText  = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to lowercase!\", \"success\");\r\n    }\r\n    const handleClearClick=()=>{\r\n      let newText ='';\r\n      setText(newText);\r\n      props.showAlert(\"Text Cleared!\", \"success\");\r\n    }\r\n    const handleOnChange=(event)=>{\r\n       // console.log(\"On Change\");\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const handleCopy = () =>{\r\n      var text = document.getElementById(\"myBox\");\r\n      text.select();\r\n      navigator.clipboard.writeText(text.value);\r\n      props.showAlert(\"Copied to Clipboard!\", \"success\");\r\n    }\r\n\r\n    const handleExtraSpaces = () =>{\r\n      let newText = text.split(/[ ]+/);\r\n      setText(newText.join(\" \"))\r\n      props.showAlert(\"Extra Spaces Removed!\", \"success\");\r\n    }\r\n\r\n\r\n    // eslint-disable-next-line react-hooks/rules-of-hooks, no-unused-vars\r\n    const [text, setText] = useState('');\r\n   // text=\"new text\"; // wrong way to change the state\r\n   //setText(\"new text\"); // correct way to change the state\r\n  return (\r\n    <>\r\n      <div className='container' style={{color:props.mode==='dark'?'white':'#042743'}}>\r\n      <h1>{props.heading}</h1>\r\n      <div className=\"mb-3\">\r\n      <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor:props.mode==='dark'?'grey':'white',color:props.mode==='dark'?'white':'#042743'}} id=\"myBox\" rows=\"8\"></textarea>\r\n      </div>\r\n      <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>Convert to Uppercase</button> \r\n      <button className=\"btn btn-primary mx-1\" onClick={handleLoClick}>Convert to LowerCase</button>\r\n      <button className=\"btn btn-primary mx-1\" onClick={handleClearClick}>Clear Text</button>\r\n      <button className=\"btn btn-primary mx-1\" onClick={handleCopy}>Copy Text</button>\r\n      <button className=\"btn btn-primary mx-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n\r\n\r\n      </div>\r\n      <div className=\"container my-2\" style={{color:props.mode==='dark'?'white':'#042743'}}>\r\n        <h2>Your text summary</h2>\r\n        <p>{text.split(\" \").length-1} words and {text.length} characters</p>\r\n        <p>{0.008 * text.split(\" \").length} Minutes read </p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length>0?text:\"Enter something in the textbox above to preview it here\"}</p>\r\n      </div>\r\n    </>\r\n  )\r\n}","/* eslint-disable jsx-a11y/anchor-is-valid */\n\nimport React,{ useState } from 'react';\nimport './App.css';\nimport Alert from './components/Alert';\n//import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n\n\nfunction App() {\n  const[mode ,setMode] = useState('light'); //Wether dark mode is enable or not\n  const [alert,setAlert] = useState(null)\n\n  const showAlert = (message,type) =>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() =>{\n      setAlert(null);\n    }, 1500);\n\n  }\n  const toggleMode = () =>{\n    if(mode==='light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enable\", \"success\");\n      document.title = 'TextUtils - Dark Mode';\n      // setInterval(() => {\n      //   document.title = 'TextUtils - Amazing Mode';\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title = 'Install TextUtils Now';\n      // }, 1500);\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enable\", \"success\");\n      document.title = 'TextUtils - Light Mode';\n\n\n    }\n  }\n\n  return (\n    <>\n    {/* <Navbar title=\"TextUtils\" aboutText=\"About Us\"/> */}\n    {/* <Navbar /> */}\n  \n    <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode}/>\n    <Alert alert={alert}/>\n    <div className=\"container my-3\">\n   <TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode}/>\n    </div>\n    {/* <About/> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n // document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}